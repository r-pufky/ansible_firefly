---
###############################################################################
# Default
###############################################################################
# Default configuration is deployed successfully. Configuration should succeed
# with and without firefly_srv_user_data_manage_enable.
#
# Tests:
# * service is active and running with sqlite, redis.
# * /data/firefly/storage/* created with correct permissions.
# * /opt/firefly/firefly-iii-v{VERSION}/storage link to /data/firefly/storage.
# * /opt/firefly/.env exists with non-sqlite DB options removed.
# * permissions propagated to all user data directories.

dependency:
  name: 'galaxy'
driver:
  name: 'podman'
provisioner:
  name: 'ansible'
  config_options:
    defaults:
      interpreter_python: 'auto_silent'
      callback_whitelist: 'profile_tasks, timer, yaml'
    ssh_connection:
      pipelining: false
  inventory:
    group_vars:
      all:
        firefly_srv_backup_enable: false
        firefly_srv_initialize_database_enable: true
        firefly_cfg_auth_static_cron_token: 'EgB8roX6ulTXhAIcZ3gsoIiV4sR1noyi'
        firefly_cfg_db_app_key: '9IDLY5jViIJX1E8Ujh20YK44IkGacEIc'
        repo_testing_enable: true
        repo_testing_versions:
          - comment: 'default'
            version: 'v6.4.4'
            asset: '{{
                lookup("env", "MOLECULE_PROJECT_DIRECTORY") ~
                "/molecule/cache/" ~
                "FireflyIII-v6.4.4.tar.gz"
              }}'
            checksum: '{{
                lookup("env", "MOLECULE_PROJECT_DIRECTORY") ~
                "/molecule/cache/" ~
                "FireflyIII-v6.4.4.tar.gz.sha256"
              }}'
            signature: '{{
                lookup("env", "MOLECULE_PROJECT_DIRECTORY") ~
                "/molecule/cache/" ~
                "FireflyIII-v6.4.4.tar.gz.asc"
              }}'
    host_vars:
      firefly-debian-13-user_data:
        firefly_srv_user_data_manage_enable: true
platforms:
  - name: 'firefly-debian-13-default'
    image: 'ghcr.io/hifis-net/debian-systemd:13'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
    published_ports:
      - '8080:80/tcp'
  - name: 'firefly-debian-13-user_data'
    image: 'ghcr.io/hifis-net/debian-systemd:13'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
verifier:
  name: 'ansible'
lint: |
  set -e
  yamllint .
  ansible-lint .
scenario:
  test_sequence:
    - 'destroy'
    - 'syntax'
    - 'create'
    - 'prepare'
    - 'converge'
    - 'verify'
    - 'destroy'
